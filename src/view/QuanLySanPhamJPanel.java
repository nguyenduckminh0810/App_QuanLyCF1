/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import Entity.SanPhamEntity;
import Entity.DonViSanPhamEntity;
import Entity.LoaiSanPhamEntity;
import Helper.MsgBox;
import Dao.*;
import Helper.Auth;
import Services.SanPhamService;
import java.util.List;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import java.text.NumberFormat;
import java.util.Locale;

/**
 *
 * @author Admin
 */
public class QuanLySanPhamJPanel extends javax.swing.JPanel {

    Locale vn = new Locale("vi", "VN");
    SanPhamDao DAOSP = new SanPhamDao();
    LoaiSanPhamDao daolsp = new LoaiSanPhamDao();
    int row;
    DefaultTableModel model = new DefaultTableModel();
    DefaultTableModel modelspkd = new DefaultTableModel();
    DonViSanPhamDao daodv = new DonViSanPhamDao();
    List<DonViSanPhamEntity> listdv;
    LoaiSanPhamDao dao = new LoaiSanPhamDao();
    List<LoaiSanPhamEntity> listlsp;

    /**
     * Creates new form QuanLySanPhamJPanel
     */
    public QuanLySanPhamJPanel() {
        initComponents();
        init();
        model = (DefaultTableModel) tblSanPhansd.getModel();
        cboDonvi.setEditable(false);
        cboDonvi.setEnabled(false);
        filltotableSP();
        txtMaSP.requestFocus();
    }

    private void init() {
        fillcomboboxLoaiSP();
        fillcomboDonVi();
        txtMaSP.setEditable(false);
        //Set trạng thái cho các nút nếu là kphai quản lý
        if (Auth.isManager() == false) {
            btnThem.setVisible(false);
            btnSua.setVisible(false);
            btnXoa.setVisible(false);
            tbnLamMoi.setVisible(false);
            txtTenSP.setEditable(false);
            txtMaSP.setEditable(false);
            txtGia.setEditable(false);
            btndonvi.setEnabled(false);
            btnloaidouong.setEnabled(false);
            cboDonvi.setEnabled(false);
            cboLoaidouong.setEnabled(false);
            rdoksd.setEnabled(false);
            rdosd.setEnabled(false);
        } else {//Nếu là quản lý
            btnThem.setVisible(true);
            btnSua.setVisible(true);
            btnXoa.setVisible(true);
            tbnLamMoi.setVisible(true);
            txtTenSP.setEditable(true);
            txtMaSP.setEditable(true);
            txtGia.setEditable(true);
            btndonvi.setEnabled(true);
            btnloaidouong.setEnabled(true);
            cboDonvi.setEnabled(true);
            cboLoaidouong.setEnabled(true);
            rdoksd.setEnabled(true);
            rdosd.setEnabled(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        txtTimKiem = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtMaSP = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenSP = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cboLoaidouong = new javax.swing.JComboBox<>();
        txtGia = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cboDonvi = new javax.swing.JComboBox<>();
        btnStart = new javax.swing.JButton();
        btnPrev = new javax.swing.JButton();
        btnnext = new javax.swing.JButton();
        btnLast = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        rdoksd = new javax.swing.JRadioButton();
        rdosd = new javax.swing.JRadioButton();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        tbnLamMoi = new javax.swing.JButton();
        btndonvi = new javax.swing.JButton();
        btnloaidouong = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSanPhansd = new javax.swing.JTable();

        setBackground(new java.awt.Color(241, 241, 241));

        jPanel1.setBackground(new java.awt.Color(241, 241, 241));
        jPanel1.setLayout(null);

        jPanel4.setBackground(new java.awt.Color(241, 241, 241));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.MatteBorder(null), "Tìm kiếm(Tên hoặc Mã)", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        txtTimKiem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTimKiemKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiem, javax.swing.GroupLayout.DEFAULT_SIZE, 477, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel4);
        jPanel4.setBounds(20, 400, 0, 0);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Mã sản phẩm");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(90, 120, 100, 17);

        txtMaSP.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtMaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaSPActionPerformed(evt);
            }
        });
        jPanel1.add(txtMaSP);
        txtMaSP.setBounds(90, 140, 320, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Tên sản phẩm");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(90, 200, 120, 17);

        txtTenSP.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtTenSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTenSPActionPerformed(evt);
            }
        });
        txtTenSP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtTenSPKeyReleased(evt);
            }
        });
        jPanel1.add(txtTenSP);
        txtTenSP.setBounds(90, 220, 320, 30);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Loại đồ uống");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(500, 120, 110, 17);

        cboLoaidouong.setBackground(new java.awt.Color(225, 193, 144));
        cboLoaidouong.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(cboLoaidouong);
        cboLoaidouong.setBounds(550, 140, 280, 30);

        txtGia.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jPanel1.add(txtGia);
        txtGia.setBounds(920, 140, 290, 30);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Giá");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(920, 120, 60, 17);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Đơn vị");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(500, 200, 70, 17);

        cboDonvi.setBackground(new java.awt.Color(225, 193, 144));
        cboDonvi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cboDonvi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboDonviActionPerformed(evt);
            }
        });
        jPanel1.add(cboDonvi);
        cboDonvi.setBounds(550, 220, 280, 30);

        btnStart.setText("|<");
        btnStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartActionPerformed(evt);
            }
        });
        jPanel1.add(btnStart);
        btnStart.setBounds(470, 750, 61, 31);

        btnPrev.setText("<<");
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });
        jPanel1.add(btnPrev);
        btnPrev.setBounds(570, 750, 61, 32);

        btnnext.setText(">>");
        btnnext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnextActionPerformed(evt);
            }
        });
        jPanel1.add(btnnext);
        btnnext.setBounds(700, 750, 61, 34);

        btnLast.setText(">|");
        btnLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLastActionPerformed(evt);
            }
        });
        jPanel1.add(btnLast);
        btnLast.setBounds(790, 750, 61, 34);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Trạng thái");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(920, 210, 100, 17);

        rdoksd.setBackground(new java.awt.Color(241, 241, 241));
        buttonGroup1.add(rdoksd);
        rdoksd.setText("Không sử dụng");
        jPanel1.add(rdoksd);
        rdoksd.setBounds(920, 230, 110, 21);

        rdosd.setBackground(new java.awt.Color(241, 241, 241));
        buttonGroup1.add(rdosd);
        rdosd.setSelected(true);
        rdosd.setText("Sử dụng");
        jPanel1.add(rdosd);
        rdosd.setBounds(1040, 230, 90, 21);

        btnThem.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setBorder(null);
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel1.add(btnThem);
        btnThem.setBounds(400, 320, 101, 34);

        btnXoa.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setBorder(null);
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel1.add(btnXoa);
        btnXoa.setBounds(670, 320, 101, 34);

        btnSua.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        btnSua.setText("Sửa");
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel1.add(btnSua);
        btnSua.setBounds(540, 320, 101, 34);

        tbnLamMoi.setFont(new java.awt.Font("Cambria", 0, 18)); // NOI18N
        tbnLamMoi.setText("Làm mới");
        tbnLamMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbnLamMoiActionPerformed(evt);
            }
        });
        jPanel1.add(tbnLamMoi);
        tbnLamMoi.setBounds(800, 320, 99, 34);

        btndonvi.setBackground(new java.awt.Color(225, 193, 144));
        btndonvi.setText("+");
        btndonvi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndonviActionPerformed(evt);
            }
        });
        jPanel1.add(btndonvi);
        btndonvi.setBounds(500, 140, 30, 30);

        btnloaidouong.setBackground(new java.awt.Color(225, 193, 144));
        btnloaidouong.setText("+");
        btnloaidouong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnloaidouongActionPerformed(evt);
            }
        });
        jPanel1.add(btnloaidouong);
        btnloaidouong.setBounds(500, 220, 30, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("QUẢN LÝ ĐỒ UỐNG");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(450, 40, 380, 44);

        tblSanPhansd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "Tên sản phẩm ", "Loại đồ uống ", "Giá", "Đợn vị", "Trạng thái"
            }
        ));
        tblSanPhansd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhansdMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSanPhansd);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 470, 1220, 269);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 24, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1302, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 840, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblSanPhansdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhansdMouseClicked
        // TODO add your handling code here:
        try {
            row = tblSanPhansd.getSelectedRow();
            edit();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_tblSanPhansdMouseClicked

    private void txtTimKiemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTimKiemKeyReleased
        // TODO add your handling code here:
        search();
    }//GEN-LAST:event_txtTimKiemKeyReleased

    private void txtTenSPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTenSPKeyReleased
        // TODO add your handling code here:
        //CheckSPInuput();
    }//GEN-LAST:event_txtTenSPKeyReleased

    private void btnStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartActionPerformed
        // TODO add your handling code here:
        row = 0;

        tblSanPhansd.setRowSelectionInterval(row, row);
        edit();

    }//GEN-LAST:event_btnStartActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        // TODO add your handling code here:

        if (row > 0) {
            row--;
            tblSanPhansd.setRowSelectionInterval(row, row);
            edit();
        }

    }//GEN-LAST:event_btnPrevActionPerformed

    private void btnnextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnextActionPerformed
        // TODO add your handling code here:

        if (row < tblSanPhansd.getRowCount() - 1) {
            row++;
            tblSanPhansd.setRowSelectionInterval(row, row);
            edit();
        }

    }//GEN-LAST:event_btnnextActionPerformed

    private void btnLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLastActionPerformed
        // TODO add your handling code here:

        row = tblSanPhansd.getRowCount() - 1;

        tblSanPhansd.setRowSelectionInterval(row, row);
        edit();

    }//GEN-LAST:event_btnLastActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed

        if (checkRegex()) {
            return;
        } else {
            this.insert();
        }
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        // TODO add your handling code here:
        if (checkRegex()) {
            return;
        } else {
            this.update();
        }
    }//GEN-LAST:event_btnSuaActionPerformed

    private void tbnLamMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbnLamMoiActionPerformed
        // TODO add your handling code here:
        clearForm();
        updateStatus();
    }//GEN-LAST:event_tbnLamMoiActionPerformed

    private void btndonviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndonviActionPerformed
        // TODO add your handling code here:
        new QLDoUongJDialog(null, true).setVisible(true);
        fillcomboboxLoaiSP();
    }//GEN-LAST:event_btndonviActionPerformed

    private void txtTenSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTenSPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTenSPActionPerformed

    private void cboDonviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboDonviActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboDonviActionPerformed

    private void btnloaidouongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnloaidouongActionPerformed
        // TODO add your handling code here:
        new QLDonViDoUongJDialog(null, true).setVisible(true);
        fillcomboDonVi();
    }//GEN-LAST:event_btnloaidouongActionPerformed

    private void txtMaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaSPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaSPActionPerformed

    private void filltotableSP() {
        model.setRowCount(0);
        try {
            List<SanPhamEntity> list = DAOSP.selectAll();
            for (SanPhamEntity x : list) {
                model.addRow(new Object[]{
                    x.getId_sp(),
                    x.getTen_sp(),
                    daolsp.selectNameByID(x.getId_loaiSP()),
                    NumberFormat.getInstance().format(x.getGia_sp()),
                    daodv.selectNameByID(x.getId_donviSP()),
                    x.isTrangthai() ? "Sử dụng" : "Không sử dụng"
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void fillcomboboxLoaiSP() {
        DefaultComboBoxModel modelcbo = (DefaultComboBoxModel) cboLoaidouong.getModel();
        modelcbo.removeAllElements();
        listlsp = dao.selectAll();
        for (LoaiSanPhamEntity loaiSP : listlsp) {
            modelcbo.addElement(loaiSP);
        }
    }

    private void fillcomboDonVi() {
        DefaultComboBoxModel modelDV = (DefaultComboBoxModel) cboDonvi.getModel();
        modelDV.removeAllElements();
        listdv = daodv.selectAll();
        for (DonViSanPhamEntity donviDoUong : listdv) {
            modelDV.addElement(donviDoUong.toString());
        }
    }

    private SanPhamEntity getInformation() {
        SanPhamEntity sp = new SanPhamEntity();
        sp.setId_sp(txtMaSP.getText());
        sp.setTen_sp(txtTenSP.getText());
        sp.setId_loaiSP(daolsp.selectIdByName(cboLoaidouong.getSelectedItem() + ""));
        sp.setGia_sp(Integer.parseInt(txtGia.getText()));
        sp.setTrangthai(rdosd.isSelected());
        sp.setId_donviSP(daodv.selectByName(cboDonvi.getSelectedItem() + ""));
        System.out.println(sp.getId_donviSP());
        return sp;
    }

    private void setForm(SanPhamEntity sp) {
        String douong = tblSanPhansd.getValueAt(row, 2).toString();
        for (int i = 0; i < listlsp.size(); i++) {
            if (douong.equals(listlsp.get(i).getTenLoai())) {
                cboLoaidouong.setSelectedIndex(i);
            }
        }
        String donvidouong = tblSanPhansd.getValueAt(row, 4).toString();
        for (int i = 0; i < listdv.size(); i++) {
            if (donvidouong.equals(listdv.get(i).getTenDonvi())) {
                cboDonvi.setSelectedIndex(i);
            }
            txtMaSP.setText(sp.getId_sp());
            txtTenSP.setText(sp.getTen_sp()); 
            txtGia.setText(sp.getGia_sp() + "");
            rdoksd.setSelected(!sp.isTrangthai());
            rdosd.setSelected(sp.isTrangthai());

        }
    }

    private void clearForm() {
        txtMaSP.setText("");
        txtTenSP.setText("");
        txtGia.setText("");
        row = -1;
        
    }

    private void search() {
        String timkiem = txtTimKiem.getText();
        //Dùng để sắp xếp và hiển thị lên bảng theo đối tượng tìm kiếm
        TableRowSorter<DefaultTableModel> sanpham = new TableRowSorter<>(model);
        tblSanPhansd.setRowSorter(sanpham);
        sanpham.setRowFilter(javax.swing.RowFilter.regexFilter(timkiem));
    }

    private void edit() {
        String masp = tblSanPhansd.getValueAt(row, 0).toString();
        SanPhamEntity sp = DAOSP.selectID(masp);
        setForm(sp);
        updateStatusWhenClickTBL();
    }

    private boolean Checknull() {
        if (txtTenSP.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập tên sản phẩm!");
            txtTenSP.requestFocus();

            return true;
        }
        List<SanPhamEntity> list = DAOSP.selectALLL();
        String id = txtMaSP.getText();
        String tensp = txtTenSP.getText();
        for (int i = 0; i < list.size(); i++) {
            if (id.equalsIgnoreCase(list.get(i).getId_sp())) {
                JOptionPane.showMessageDialog(this, "Trùng khóa chính");
                txtMaSP.requestFocus();
                return true;
            } else if (tensp.equalsIgnoreCase(list.get(i).getTen_sp())) {
                JOptionPane.showMessageDialog(this, "Tên sản phẩm đã tồn tại");
                txtTenSP.requestFocus();
                return true;
            }
        }
        if (txtGia.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập giá sản phẩm!");
            txtGia.requestFocus();
            return true;
        } else if (txtMaSP.getText().length() < 3) {
            JOptionPane.showMessageDialog(this, "Mã sản phẩm phải trên 2 kí tự");
            return true;
        } else if (txtTenSP.getText().length() < 5) {
            JOptionPane.showMessageDialog(this, "Tên sản phẩm phải trên 5 kí tự");
            return true;
        }
        return false;

    }

    // chỗ này đã fix xong check tiếng việt
    public boolean checkRegex() {
        Pattern regex = Pattern.compile("^[a-zA-Z_ÀÁÂÃÈÉÊẾÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêếìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ\\ ]+$");
        Pattern regex2 = Pattern.compile("[a-zA-Z]");
        Pattern regex3 = Pattern.compile("[^0-9]");
        if (!regex.matcher(txtTenSP.getText().trim()).find()) {
            JOptionPane.showMessageDialog(this, "Tên sản phẩm chứa ký tự đặc biệt, vui lòng xem lại!");
            txtTenSP.requestFocus();
            return true;
        }
        if (regex2.matcher(txtGia.getText()).find()) {
            JOptionPane.showMessageDialog(this, "Giá chỉ nhận giá trị số, vui lòng nhập lại!");
            txtGia.setText("");
            txtGia.requestFocus();
            return true;
        }
        if (regex3.matcher(txtGia.getText()).find()) {
            JOptionPane.showMessageDialog(this, "Giá chứa ký tự đặc biệt, vui lòng xem lại!");
            txtGia.requestFocus();
            return true;
        }
        return false;
    }

    private boolean CheckNumber() {
        String regex = "SP\\d+";
        String regexx = "sp\\d+";
        Pattern parten = Pattern.compile(regex, Pattern.CASE_INSENSITIVE);
        if (!parten.matcher(txtMaSP.getText()).find()) {
            JOptionPane.showMessageDialog(this, "Nhập sai định dạng mã sản phẩm");
            return true;
        } else {
            Pattern p = Pattern.compile("^[0-9]{1,15}$");
            if (!p.matcher(txtGia.getText()).matches()) {
                JOptionPane.showMessageDialog(this, "Nhập sai định dạng giá sản phẩm");
                return true;
            } else if (Integer.parseInt(txtGia.getText()) < 0) {
                JOptionPane.showMessageDialog(this, "Giá nhập vào không được âm");
                return true;
            }
            return false;
        }
    }

    private boolean CheckSPInuput() {

        model.setRowCount(0);
        try {
            List<SanPhamEntity> list = DAOSP.Select_ByName(txtTenSP.getText());
            for (int i = 0; i < list.size(); i++) {
                model.addRow(new Object[]{list.get(i).getId_sp(), list.get(i).getTen_sp(),
                    daolsp.selectNameByID(list.get(i).getId_loaiSP()),
                    list.get(i).getGia_sp(), daodv.selectNameByID(list.get(i).getId_donviSP()),
                    list.get(i).isTrangthai() ? "Sử dụng" : "Không sử dụng"});
            }
        } catch (Exception e) {
        }
        return false;
    }
    //Cập nhật trạng thái cho các nút khi chọn 

    private void updateStatusWhenClickTBL() {
        boolean edit = (row >= 0);
        boolean fist = (row == 0);
        boolean last = (row == tblSanPhansd.getRowCount() - 1);
        ////
        txtMaSP.setEditable(!edit);
        btnThem.setEnabled(!edit);
        btnXoa.setEnabled(edit);
        btnSua.setEnabled(edit);
        ////
        btnStart.setEnabled(edit && !fist);
        btnPrev.setEnabled(edit && !fist);
        btnnext.setEnabled(!last && edit);
        btnLast.setEnabled(!last && edit);
    }

    private void updateStatus() {
        boolean edit = true;
        boolean fist = (row == 0);
        boolean last = (row == tblSanPhansd.getRowCount() - 1);
        ////
        txtMaSP.setEnabled(edit);
        btnThem.setEnabled(edit);
        btnXoa.setEnabled(edit);
        btnSua.setEnabled(edit);
        ////
        btnStart.setEnabled(edit && !fist);
        btnPrev.setEnabled(edit && !fist);
        btnnext.setEnabled(!last && edit);
        btnLast.setEnabled(!last && edit);
    }
    Services.SanPhamService service = new SanPhamService();

    private void insert() {
        if (Checknull()) {
            return;
        } else if (CheckNumber()) {
            return;
        } else if (CheckSPInuput()) {
            return;
        } else {
            try {
                if (MsgBox.confirm(this, "Bạn có muốn thêm sản phẩm này ?")) {
                    //SanPham sp = getInformation();
                    service.insert(getInformation());
                    clearForm();
                    filltotableSP();
                    JOptionPane.showMessageDialog(this, "Đã thêm");
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Ops! Lỗi truy vấn dữ liệu rồi!");
            }
        }
//       
    }

    private void update() {
        if (CheckNumber()) {
            return;
        } else {
            try {
                if (MsgBox.confirm(this, "Bạn có muốn sửa sản phẩm ?")) {
                    SanPhamEntity sp = getInformation();
                    DAOSP.update(sp);
                    filltotableSP();
                    clearForm();
                    updateStatus();
                    JOptionPane.showMessageDialog(this, "Đã sửa");
                } else ;
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Ops! Sửa thất bại");
                e.printStackTrace();
            }

        }
    }

    private void delete() {
        try {
            int chon = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa ?");
            if (row == -1) {
                JOptionPane.showMessageDialog(this, "Dữ liệu chưa được hiển thị để xóa!");
                return;
            }
            if (chon == JOptionPane.YES_OPTION) {
                String manv = txtMaSP.getText();
                DAOSP.delete(manv);
                filltotableSP();
                clearForm();
                updateStatus();
                JOptionPane.showMessageDialog(this, "Yeah! Đã xóa");
            }

        } catch (Exception e) {
            e.printStackTrace();
//            JOptionPane.showMessageDialog(this, "xóa không thành công");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLast;
    private javax.swing.JButton btnPrev;
    private javax.swing.JButton btnStart;
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btndonvi;
    private javax.swing.JButton btnloaidouong;
    private javax.swing.JButton btnnext;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cboDonvi;
    private javax.swing.JComboBox<String> cboLoaidouong;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rdoksd;
    private javax.swing.JRadioButton rdosd;
    private javax.swing.JTable tblSanPhansd;
    private javax.swing.JButton tbnLamMoi;
    private javax.swing.JTextField txtGia;
    private javax.swing.JTextField txtMaSP;
    private javax.swing.JTextField txtTenSP;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables
}
